# This workflow will build a Java project with Maven
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven
###########################
name: Master Tests on Push

on:
  push:
    branches: [ master ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v1
      with:
        # Disabling shallow clone is recommended for improving relevancy of reporting
        fetch-depth: 0
    - name: docker compose Postgres
      run: |
        docker-compose up -d postgres
    
    - name: Set up JDK 1.8
      uses: actions/setup-java@v1
      with:
        java-version: 1.8
    - name: Install Google Chrome # Using shell script to install Google Chrome
      run: |
       chmod +x ./scripts/install_chrome.sh
       ./scripts/install_chrome.sh
    - uses: nanasess/setup-chromedriver@master

    - name: Cache Maven packages
      uses: actions/cache@v1
      with:
        path: ~/.m2
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-m2
    - name: Test main project
      run: mvn clean verify sonar:sonar --file bestofbooks/pom.xml -Dsonar.projectKey=gabsw_BookStore -Dsonar.organization=gabsw -Dsonar.host.url=https://sonarcloud.io -Dsonar.login=$SONAR_TOKEN -Dsonar.branch.name=${GITHUB_REF##*/}
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        SPRING_DATASOURCE_URL: jdbc:postgresql://localhost:5432/book_store
