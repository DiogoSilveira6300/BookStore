# This workflow will build a Java project with Maven
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven
###########################
name: Pull Request Tests

on:
  pull_request:
    branches: [ master ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v1
      with:
        # Disabling shallow clone is recommended for improving relevancy of reporting
        fetch-depth: 0
    - name: docker compose Postgres
      run: |
        docker-compose up -d postgres
    
    - name: Set up JDK 1.8
      uses: actions/setup-java@v1
      with:
        java-version: 1.8
    - name: Install jq
      run: sudo apt install jq
      
    - name: Cache Maven packages
      uses: actions/cache@v1
      with:
        path: ~/.m2
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-m2
    - name: Test main project
      run: |
        chmod +x ./scripts/pull_request_test_and_analysis.sh
        ./scripts/pull_request_test_and_analysis.sh
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        SPRING_DATASOURCE_URL: jdbc:postgresql://localhost:5432/book_store

    - name: docker compose service
      run: |
        docker-compose up -d main_application
    - name: Install Google Chrome # Using shell script to install Google Chrome
      run: |
       chmod +x ./scripts/install_chrome.sh
        ./scripts/install_chrome.sh
    - name: Test main project
      run: mvn test --file ClientApplication/pom.xml
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}